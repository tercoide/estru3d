#JSON

C
Null
R
v

_init
M


Decode
M
v
(JSONString)s[(UseNull)b]
FromString
M
v
(JSONString)s[(UseNull)b]
Encode
M
s
(Value)v
ToString
M
s
(Value)v
Encode2
M
s
(vData)v
'Encode in JSON format in a human readable way. Based on a Laurent tool
#JSONCollection
Collection
C
_get
m
v
(sKey)s
_put
m

(Value)v(sKey)s
_next
m
v

Copy
m
JSONCollection

#SpreadSheet
UserControl
C
_Properties
C
s
"*,Rows,Cols,Header,Corner"
Rows
p
i

Cols
p
i

CurrentRow
r
i

CurrentCol
r
i

SelRow
r
i

SelCol
r
i

SelRows
r
i

SelCols
r
i

Header
p
i

RowsMax
r
i

ColumnsMax
r
i

Corner
p
s

Cell
m

(row)i(col)i[(text)v(ForeColor)i(BackColor)i(Alignment)i(formato)s]
columns
m

(number)i[(title)s(BackColor)i(Size)g(Alignment)i(MyFormat)s]
CellText
m
s
(row)i(col)i
CellFloat
m
f
(row)i(col)i
Rows2
m

(number)i(title)s(ForeColor)i(BackColor)i(Size)g(Alignment)i
_new
m


Recalcular
m


CopyToClipboard
m


#SquareButton
UserControl
C
_Properties
C
s
"*,Text,Picture"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"8,8"
_Similar
C
s
"ToggleButton,Button,ToolButton"
:Click
:


Picture
p
Picture

Text
p
s

_new
m


da_Draw
m


da_MouseDown
m


da_MouseUp
m


da_Enter
m


da_Leave
m


#SquareButton2
UserControl
C
_Properties
C
s
"*,Text,Picture"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"8,8"
_Similar
C
s
"ToggleButton,Button,ToolButton"
:Click
:


Picture
p
Picture

Text
p
s

_new
m


da_Arrange
m


da_MouseDown
m


da_MouseUp
m


da_Enter
m


da_Leave
m


da_GotFocus
m


da_LostFocus
m


#SquareToggleButton
UserControl
C
_Properties
C
s
"*,Text,Picture,Value"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"8,8"
_Similar
C
s
"ToggleButton,Button,ToolButton"
:Click
:


Picture
p
Picture

Text
p
s

value
p
b

_new
m


da_Draw
m


da_MouseDown
m


da_MouseUp
m


da_Enter
m


da_Leave
m


#SquareToolButton
UserControl
C
_Properties
C
s
"*,Text,Picture"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"8,8"
_Similar
C
s
"ToggleButton,Button,ToolButton"
:Click
:


Picture
p
Picture

Text
p
s

_new
m


da_Draw
m


da_MouseDown
m


da_MouseUp
m


da_Enter
m


da_Leave
m


#arr

C
Count
p
i

Type
p
i

Create
m

(dimentions)i
Remove
m


GetValue
m
f
(pos1)i[(pos2)i(po3)i(pos4)i(pos5)i]
#fPlantaTipo
Form
C
Form_Open
m


