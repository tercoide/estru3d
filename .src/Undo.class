' Gambas class file

' This class implemets the Undo/Redo actions

Private cUndo As New Collection[]
' cUndo[]
'   cStage["1"]
'       "name"="Editar nudo"
'       "1"=clsNudo object
'   cStage["2"]
'       "name"="Editar barras"
'       "1"=clsBarra object
'       "A2"=clsBarra object addition
'       "D3"=clsBarra object deletion
'       "4"=clsBarra object

Private cRedo As New Collection
Public UndoStage As Integer
Public RedoStage As Integer
Private IsStageOpen As Boolean = False

Public Function AddUndoItem(oItem As Object, Optional NewStageName As String = "")

    ' agrego un item a la coleccion activa, si no hay instancia activa, la creo
    If NewStageName <> "" Then
        OpenUndoStage(NewStageName)
        cUndo[cUndo.Last].Add(oItem, CStr(cUndo[cUndo.Last].Count))
        CloseUndoStage
    Else
        cUndo[cUndo.Last].Add(oItem, CStr(cUndo[cUndo.Last].Count))

    Endif

End

'' Adds an undo stage where one or more stuff can be Undo'ed at once
Public Function OpenUndoStage(sName As String) As Boolean

    Dim cStage As New Collection

    If sName = "" Then sName = ""
    cUndo.Add(cStage, CStr(cUndo.Count + 1))        ' agrego la coleccion que acumula acciones
    cStage.Add(sName, "name")                   ' el primer item es el nombre de las acciones, ej: "Editar nudos"
    IsStageOpen = True

End

Public Function CloseUndoStage() As Boolean

    IsStageOpen = False

End

'' Esto debe ser llamado cuando el user presiona el boton de Undo
Public Sub DoUndo()

    Dim cLastUndo As Collection

    If cUndo.Count = 0 Then Return
    cLastUndo = cUndo[cUndo.Last]
    For Each c As Object In cLastUndo

    Next

End
